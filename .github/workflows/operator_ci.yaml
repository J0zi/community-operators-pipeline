
name: Operator CI

on:
 pull_request_target:
   types: [opened, synchronize, reopened, ready_for_review, unlabeled]

env:
  AUTOMERGE_ENABLED: "1"
  OPP_PRODUCTION_TYPE: "k8s"
  OPP_SCRIPT_URL: "https://raw.githubusercontent.com/redhat-openshift-ecosystem/community-operators-pipeline/ci/dev/ci/scripts/opp.sh"
  OPP_SCRIPT_ENV_OPRT_URL: "https://raw.githubusercontent.com/redhat-openshift-ecosystem/community-operators-pipeline/ci/dev/ci/scripts/opp-oprt.sh"
  OPP_SCRIPT_ENV_URL: "https://raw.githubusercontent.com/redhat-openshift-ecosystem/community-operators-pipeline/ci/dev/ci/scripts/opp-env.sh"
  OPP_SCRIPT_COSMETICS_URL: "https://raw.githubusercontent.com/redhat-openshift-ecosystem/community-operators-pipeline/ci/dev/ci/scripts/opp-oprt-cosmetics.sh"
  OPP_THIS_REPO_BASE: "https://github.com"
  OPP_THIS_REPO: "redhat-openshift-ecosystem/community-operators-pipeline"
  OPP_THIS_REPO_NAME: "community-operators-pipeline"
  OPP_THIS_REPO_ORG: "redhat-openshift-ecosystem"
  OPP_THIS_BRANCH: "main"
  OPP_ANSIBLE_PULL_REPO: "https://github.com/redhat-openshift-ecosystem/operator-test-playbooks"
  OPP_ANSIBLE_PULL_BRANCH: "upstream-community-dev"
  OPP_REVIEWERS_ENABLED: 0

  
jobs:
  operator-automerge-enabled:
    runs-on: ubuntu-latest
    if: github.event.pull_request.state == 'open'
    steps:
      - name: Remove automerge-disabled when needed
        if: ${{ env.AUTOMERGE_ENABLED == '1' }}
        uses: actions/github-script@v3
        continue-on-error: true
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.removeLabel({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'automerge-disabled'
            })
      - name: Add automerge-disabled when needed
        uses: actions/github-script@v3
        if: ${{ env.AUTOMERGE_ENABLED == '0' }}
        continue-on-error: true
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: [ 'automerge-disabled' ]
            })

  operator-ci:
    if: github.event.pull_request.draft == false || contains(github.event.pull_request.labels.*.name, 'allow/test-in-draft-mode')
    needs: operator-automerge-enabled
    runs-on: ubuntu-latest
    steps:
      # - name: Setting labels from changes in directory changes
      #   uses: actions/labeler@v2
      #   with:
      #     repo-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: "Remove package-validated"
        uses: actions/github-script@v3
        if: (!contains(github.event.pull_request.labels.*.name, 'do-not-merge/hold'))
        continue-on-error: true
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.removeLabel({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'package-validated'
            })

      - name: "Add Assignees"
        uses: actions/github-script@v3
        if: github.event.action == 'opened' || github.event.action == 'reopened'
        continue-on-error: true
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.addAssignees({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              assignees: [ "J0zi", "mvalarh" ]
            });

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: python -m pip install --upgrade pip yq

      - name: Operator traffic light
        id: op-traffic-light
        env:
          OPP_LABELS: "${{ join(github.event.pull_request.labels.*.name, ' ') }}"
          OPP_PR_AUTHOR: "${{ github.event.pull_request.user.login }}"
          OPP_OPRT_REPO: "${{ github.event.pull_request.head.repo.full_name }}"
          OPP_OPRT_SHA: "${{ github.event.pull_request.head.sha }}"
          OPP_OPRT_SRC_REPO: "${{ github.event.pull_request.base.repo.full_name }}"
          OPP_OPRT_SRC_BRANCH: "${{ github.event.pull_request.base.ref }}"
          OPP_THIS_PR: ${{ github.event.pull_request.number }}
        run: |
          bash <(curl -sL $OPP_SCRIPT_ENV_OPRT_URL)

      - name: "Remove installation-validated"
        uses: actions/github-script@v4
        if: (github.event.action != 'unlabeled')
        continue-on-error: true
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const arr = ['installation-validated', 'installation-validated-atest', ];

            for (let label of arr) {
              github.issues.removeLabel({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: label
              })
            }

      - name: "Mention reviewers if exist"
        if: (steps.op-traffic-light.outputs.opp_pr_revievers != '') && (!contains(github.event.pull_request.labels.*.name, 'allow/ci-changes'))
        uses: mshick/add-pr-comment@v1
        with:
          OPP_THIS_REPO_NAME: "community-operators-pipeline"
          OPP_THIS_REPO_ORG: "redhat-openshift-ecosystem"

          message: |
            ${{ steps.op-traffic-light.outputs.opp_pr_revievers }}, please approve as you are original reviewer(s).

          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: 'github-actions[bot]' # The user.login for temporary GitHub tokens
          allow-repeats: false
